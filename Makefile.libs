#----------------------------------------------------------------------
#
# This file sets the library information needed in CCFLAGS and LDFLAGS
# for the gbpCode Makefile
#
# YOU REALLY SHOULDN'T NEED TO EDIT THIS FILE!
#
#----------------------------------------------------------------------

# Set default debugger support
ifndef USE_DEBUGGER
  USE_DEBUGGER=0
endif
export USE_DEBUGGER

# Add cfitsio
ifndef USE_CFITSIO
  USE_CFITSIO    =0
endif
ifneq ($(USE_CFITSIO),0)
  CCFLAGS := $(CCFLAGS) -I$(GBP_CFITSIO_DIR)/include/
  LDFLAGS := $(LDFLAGS) -L$(GBP_CFITSIO_DIR)/lib/
  LIBS    := $(LIBS) -lcfitsio
endif

# Add hdf5
ifndef USE_HDF5
  USE_HDF5    =0
endif
ifneq ($(USE_HDF5),0)
  CCFLAGS := $(CCFLAGS) -I$(GBP_HDF5_DIR)/include/
  LDFLAGS := $(LDFLAGS) -L$(GBP_HDF5_DIR)/lib/
  LIBS    := $(LIBS) -lhdf5
endif

# Add gdlib
ifndef USE_GDLIB
  USE_GDLIB    =1
  GBP_GDLIB_DIR=/usr/lib/
endif
ifneq ($(USE_GDLIB),0)
  CCFLAGS := $(CCFLAGS) -I$(GBP_GSL_DIR)/include/
  LDFLAGS := $(LDFLAGS) -L$(GBP_GSL_DIR)/lib/
  LIBS    := $(LIBS) -lgd
endif

# Add Cuda
ifndef USE_CUDA
  USE_CUDA    =0
endif
export USE_CUDA

# Add valgrind
ifndef USE_VALGRIND
  USE_VALGRIND    =0
  GBP_VALGRIND_DIR=/usr/lib/
endif
ifneq ($(USE_VALGRIND),0)
  CCFLAGS := $(CCFLAGS) -I$(GBP_VALGRIND_DIR)/include/
  LDFLAGS := $(LDFLAGS) -L$(GBP_VALGRIND_DIR)/lib/
  LIBS    := $(LIBS) 
endif

# Add GSL stuff (default off)
ifndef USE_GSL
  USE_GSL=0
endif
ifneq ($(USE_GSL),0)
  CCFLAGS := $(CCFLAGS) -I$(GBP_GSL_DIR)/include/
  LDFLAGS := $(LDFLAGS) -L$(GBP_GSL_DIR)/lib/ 
  LIBS    := $(LIBS) -lm -lgsl -lgslcblas
endif

# Add FFTW (fast Fourier transform) stuff (default off)
ifndef USE_FFTW
  USE_FFTW=0
endif
ifneq ($(USE_FFTW),0)
  ifneq ($(USE_MPI),0)
    CCFLAGS := $(CCFLAGS) -I$(GBP_FFTW_DIR)/include
    LDFLAGS := $(LDFLAGS) -L$(GBP_FFTW_DIR)/lib
    ifeq ($(USE_DOUBLE),0)
      LIBS  := $(LIBS) -lsrfftw_mpi -lsfftw_mpi -lsrfftw -lsfftw
    else
      LIBS  := $(LIBS) -ldrfftw_mpi -ldfftw_mpi -ldrfftw -ldfftw
    endif
  else
    CCFLAGS := $(CCFLAGS) -I$(GBP_FFTW_DIR)/include
    LDFLAGS := $(LDFLAGS) -L$(GBP_FFTW_DIR)/lib
    ifeq ($(USE_DOUBLE),0)
      LIBS  := $(LIBS) -lsrfftw -lsfftw
    else
      LIBS  := $(LIBS) -ldrfftw -ldfftw
    endif
  endif
  CCFLAGS := $(CCFLAGS) -DUSE_FFTW
endif

# SPRNG (parallel random number generator) stuff (default off)
ifndef USE_SPRNG
  USE_SPRNG=0
endif
ifneq ($(USE_SPRNG),0)
  CCFLAGS := $(CCFLAGS) -I$(GBP_SPRNG_DIR)/include
  LDFLAGS := $(LDFLAGS) -L$(GBP_SPRNG_DIR)/lib
  LIBS    := $(LIBS) -llcg
  CCFLAGS := $(CCFLAGS) -DUSE_SPRNG
endif
export USE_SPRNG

# Set default MPI support
ifndef USE_MPI
  USE_MPI=0
endif
export USE_MPI
ifndef USE_MPI_IO
  USE_MPI_IO=0
endif
export USE_MPI_IO
ifneq ($(USE_MPI_IO),0)
  CCFLAGS  := $(CCFLAGS) -DUSE_MPI_IO
endif

