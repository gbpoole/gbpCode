# Set empty defaults
set(LIBDIRS    "" )
set(SRCDIRS    "" )
set(INCFILES   "" )
set(SRCFILES   "" )
set(EXEFILES   "" )
set(DATAFILES  "" )
set(PASSDIRS   "" )
set(DATASUBDIR "" )

# Add subdirectories that are roots to libraries
# eg. list(APPEND LIBDIRS "dir" )
# -- NONE FOR THIS DIR --

# Add directories that contribute source files 
# eg. list(APPEND SRCDIRS "dir" )
# -- NONE FOR THIS DIR --

# Add header files
# eg. list(APPEND INCFILES "file" )
list(APPEND INCFILES "gbpTrees_build.h" )

# Add source files
# eg. list(APPEND SRCFILES "file" )
list(APPEND SRCFILES "read_trees_run_parameters.c" )
list(APPEND SRCFILES "tree_case_flags_text.c" )
list(APPEND SRCFILES "read_trees_match_scores.c" )
list(APPEND SRCFILES "read_trees_horizontal.c" )
list(APPEND SRCFILES "read_trees.c" )
list(APPEND SRCFILES "read_trees_data.c" )
list(APPEND SRCFILES "read_trees_catalogs.c" )
list(APPEND SRCFILES "read_trees_pointers.c" )
list(APPEND SRCFILES "read_trees_final_totals.c" )
list(APPEND SRCFILES "read_matches_header.c" )
list(APPEND SRCFILES "read_AHF_for_trees.c" )
list(APPEND SRCFILES "read_matches.c" )
list(APPEND SRCFILES "read_forests.c" )
list(APPEND SRCFILES "init_trees_read.c" )
list(APPEND SRCFILES "free_trees.c" )
list(APPEND SRCFILES "finalize_trees.c" )
list(APPEND SRCFILES "assign_group_subgroup_order_vertical.c" )
list(APPEND SRCFILES "assign_progenitor_order_vertical_recursive.c" )
list(APPEND SRCFILES "assign_depth_first_index_vertical_recursive.c" )
list(APPEND SRCFILES "assign_unique_vertical_tree_ids.c" )
list(APPEND SRCFILES "find_tree_node.c" )
list(APPEND SRCFILES "init_trees_lookup.c" )
list(APPEND SRCFILES "free_trees_lookup.c" )
list(APPEND SRCFILES "update_trees_lookup.c" )
list(APPEND SRCFILES "f_goodness_n_p.c" )
list(APPEND SRCFILES "check_validity_of_match.c" )
list(APPEND SRCFILES "check_validity_of_emerged_match.c" )
list(APPEND SRCFILES "check_if_match_is_better.c" )
list(APPEND SRCFILES "check_if_match_is_bigger.c" )
list(APPEND SRCFILES "check_if_forced_match_is_better.c" )
list(APPEND SRCFILES "check_if_match_is_bigger_peak.c" )
list(APPEND SRCFILES "check_if_match_is_simple.c" )
list(APPEND SRCFILES "check_if_match_is_immediate.c" )
list(APPEND SRCFILES "check_if_halo_is_better_main_progenitor.c" )
list(APPEND SRCFILES "check_if_halo_is_descendant.c" )
list(APPEND SRCFILES "check_if_halo_is_merger.c" )
list(APPEND SRCFILES "check_if_type_is_fragmented.c" )
list(APPEND SRCFILES "check_if_extended_type_is_fragmented.c" )
list(APPEND SRCFILES "check_if_descendant_is_back_matched.c" )
list(APPEND SRCFILES "check_validity_of_tree_case_flag.c" )
list(APPEND SRCFILES "init_trees_data.c" )
list(APPEND SRCFILES "free_trees_data.c" )
list(APPEND SRCFILES "change_horizontal_ID_recursive.c" )
list(APPEND SRCFILES "compute_substructure_order_recursive.c" )
list(APPEND SRCFILES "compute_progenitor_order_recursive.c" )
list(APPEND SRCFILES "compute_peak_particle_count_recursive.c" )
list(APPEND SRCFILES "compute_inclusive_particle_count_recursive.c" )
list(APPEND SRCFILES "compute_progenitor_score_vertical_recursive.c" )
list(APPEND SRCFILES "assign_depth_first_index_recursive.c" )
list(APPEND SRCFILES "assign_depth_first_index_recursive.c" )
list(APPEND SRCFILES "add_node_to_trees.c" )
list(APPEND SRCFILES "add_node_to_substructure_hierarchy.c" )
list(APPEND SRCFILES "add_node_to_vertical_tree.c" )
list(APPEND SRCFILES "free_trees_vertical.c" )
list(APPEND SRCFILES "init_trees_vertical.c" )
list(APPEND SRCFILES "construct_unique_vertical_tree_id.c" )
list(APPEND SRCFILES "compute_trees_vertical.c" )
list(APPEND SRCFILES "finalize_trees_vertical.c" )
list(APPEND SRCFILES "write_trees_vertical.c" )
list(APPEND SRCFILES "write_tree_run_parameters.c" )
list(APPEND SRCFILES "split_forests_n_ways.c" )
list(APPEND SRCFILES "write_a_list.c" )
list(APPEND SRCFILES "read_a_list.c" )
list(APPEND SRCFILES "write_match_results.c" )
list(APPEND SRCFILES "check_for_matching_input_files.c" )
list(APPEND SRCFILES "compute_cross_catalog_matches.c" )
list(APPEND SRCFILES "compute_trees_matches.c" )
list(APPEND SRCFILES "compute_forests.c" )
list(APPEND SRCFILES "compute_trees_horizontal_stats.c" )
list(APPEND SRCFILES "compute_trees_horizontal.c" )
list(APPEND SRCFILES "set_halo_offset.c" )
list(APPEND SRCFILES "set_match_id.c" )
list(APPEND SRCFILES "set_match_file.c" )
list(APPEND SRCFILES "set_match_snapshot.c" )
list(APPEND SRCFILES "set_match_type.c" )
list(APPEND SRCFILES "set_match_n_particles.c" )
list(APPEND SRCFILES "set_match_index.c" )
list(APPEND SRCFILES "set_match_score.c" )
list(APPEND SRCFILES "set_n_particles_peak.c" )
list(APPEND SRCFILES "set_extended_descendant.c" )
list(APPEND SRCFILES "set_extended_first_progenitor.c" )
list(APPEND SRCFILES "set_extended_next_progenitor.c" )
list(APPEND SRCFILES "check_for_fragmented_halos.c" )
list(APPEND SRCFILES "add_to_trees_horizontal_stats.c" )
list(APPEND SRCFILES "init_trees_horizontal_roots.c" )
list(APPEND SRCFILES "init_trees_horizontal_snapshot.c" )
list(APPEND SRCFILES "add_substructure_info.c" )
list(APPEND SRCFILES "identify_back_matches.c" )
list(APPEND SRCFILES "identify_progenitors.c" )
list(APPEND SRCFILES "identify_bridges.c" )
list(APPEND SRCFILES "set_largest_descendants.c" )
list(APPEND SRCFILES "finalize_trees_horizontal.c" )
list(APPEND SRCFILES "init_trees_horizontal_stats.c" )
list(APPEND SRCFILES "write_trees_horizontal_emerged_candidates.c" )
list(APPEND SRCFILES "write_trees_horizontal_log_file.c" )
list(APPEND SRCFILES "write_trees_horizontal_report.c" )
list(APPEND SRCFILES "write_trees_horizontal.c" )
list(APPEND SRCFILES "propagate_progenitor_info.c" )
list(APPEND SRCFILES "propagate_bridge_info.c" )
list(APPEND SRCFILES "propagate_dominant_substructures.c" )
list(APPEND SRCFILES "propagate_n_particles_peak.c" )
list(APPEND SRCFILES "propagate_fragmented_info.c" )
list(APPEND SRCFILES "propagate_fix_fragmented_info.c" )
list(APPEND SRCFILES "propagate_merger_info.c" )
list(APPEND SRCFILES "add_progenitor_to_halo.c" )
list(APPEND SRCFILES "assign_group_subgroup_order_vertical.c" )

# Add executable source files (those with a main())
# eg. list(APPEND EXEFILES "file" )
# -- NONE FOR THIS DIR --

# Add data files
# eg. list(APPEND DATAFILES "file" )
# -- NONE FOR THIS DIR --

# Set data subdirectory
# eg. set(DATASUBDIR "dir" )

# Add subdirectories that we want to decend into
#   but which we won't scan for sources, etc
# eg. list(APPEND PASSDIRS "dir" )
# -- NONE FOR THIS DIR --

